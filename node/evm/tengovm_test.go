package evm

import (
	"fmt"
)

const code = `
    a := 5
    b := 10
    c := a + b
    printf("c = %d\n", c)
`

// bytecode was generated with xxd -i binary.out
var bytecode = Bytecode{
	0x37, 0xff, 0x81, 0x03, 0x01, 0x01, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x01, 0xff, 0x82, 0x00, 0x01, 0x03, 0x01, 0x04, 0x42, 0x61,
	0x73, 0x65, 0x01, 0x04, 0x00, 0x01, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x01, 0xff, 0x88, 0x00, 0x01, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x01, 0xff, 0x84, 0x00, 0x00, 0x00, 0x1d, 0xff, 0x87, 0x02,
	0x01, 0x01, 0x0e, 0x5b, 0x5d, 0x2a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x01, 0xff, 0x88, 0x00, 0x01, 0xff, 0x84,
	0x00, 0x00, 0x32, 0xff, 0x83, 0x03, 0x01, 0x02, 0xff, 0x84, 0x00, 0x01,
	0x04, 0x01, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x01, 0x0c, 0x00, 0x01, 0x04,
	0x42, 0x61, 0x73, 0x65, 0x01, 0x04, 0x00, 0x01, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x01, 0x04, 0x00, 0x01, 0x05, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x01,
	0xff, 0x86, 0x00, 0x00, 0x00, 0x13, 0xff, 0x85, 0x02, 0x01, 0x01, 0x05,
	0x5b, 0x5d, 0x69, 0x6e, 0x74, 0x01, 0xff, 0x86, 0x00, 0x01, 0x04, 0x00,
	0x00, 0x34, 0xff, 0x82, 0x01, 0x66, 0x01, 0x01, 0x01, 0x08, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x74, 0x67, 0x6f, 0x01, 0x02, 0x01, 0x62, 0x01, 0x05,
	0x00, 0x02, 0x10, 0x20, 0x36, 0x00, 0x01, 0x01, 0x08, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x74, 0x67, 0x6f, 0x01, 0x02, 0x01, 0x62, 0x01, 0x05, 0x00,
	0x02, 0x10, 0x20, 0x36, 0x00, 0x00, 0x5e, 0xff, 0x89, 0x03, 0x01, 0x01,
	0x10, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x01, 0xff, 0x8a, 0x00, 0x01, 0x04, 0x01,
	0x0c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x01, 0x0a, 0x00, 0x01, 0x09, 0x4e, 0x75, 0x6d, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x73, 0x01, 0x04, 0x00, 0x01, 0x0d, 0x4e, 0x75, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x01, 0x04, 0x00,
	0x01, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x01,
	0xff, 0x8c, 0x00, 0x00, 0x00, 0x22, 0xff, 0x8b, 0x04, 0x01, 0x01, 0x12,
	0x6d, 0x61, 0x70, 0x5b, 0x69, 0x6e, 0x74, 0x5d, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x01, 0xff, 0x8c, 0x00, 0x01, 0x04,
	0x01, 0x04, 0x00, 0x00, 0x42, 0xff, 0x8a, 0x01, 0x21, 0x00, 0x00, 0x00,
	0x25, 0x00, 0x00, 0x00, 0x00, 0x01, 0x25, 0x00, 0x01, 0x24, 0x00, 0x00,
	0x24, 0x00, 0x01, 0x01, 0x25, 0x00, 0x02, 0x2e, 0x01, 0x00, 0x00, 0x02,
	0x24, 0x00, 0x02, 0x21, 0x02, 0x0d, 0x03, 0x0d, 0x2c, 0x38, 0x40, 0x38,
	0x12, 0x12, 0x1e, 0x34, 0x0c, 0x1c, 0x18, 0x2c, 0x24, 0x2c, 0x26, 0x22,
	0x30, 0x46, 0x36, 0x5e, 0x00, 0x0e, 0x06, 0x04, 0x3c, 0x38, 0x00, 0x0c,
	0xff, 0x8d, 0x02, 0x01, 0x02, 0xff, 0x8e, 0x00, 0x01, 0x10, 0x00, 0x00,
	0x2c, 0xff, 0x8e, 0x00, 0x03, 0x0c, 0x2a, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xff, 0x8f, 0x03, 0x01, 0x01, 0x03,
	0x49, 0x6e, 0x74, 0x01, 0xff, 0x90, 0x00, 0x01, 0x01, 0x01, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x01, 0x04, 0x00, 0x00, 0x00, 0x47, 0xff, 0x90,
	0x03, 0x01, 0x0a, 0x00, 0x0c, 0x2a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0xff, 0x90, 0x03, 0x01, 0x14, 0x00, 0x0f,
	0x2a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0xff, 0x91, 0x03, 0x01, 0x01, 0x06, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x01, 0xff, 0x92, 0x00, 0x01, 0x01, 0x01, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x01, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0xff, 0x92,
	0x0a, 0x01, 0x07, 0x63, 0x20, 0x3d, 0x20, 0x25, 0x64, 0x0a, 0x00,
}

func ExampleRun() {
	vm := New()
	err := vm.Run(bytecode)
	if err != nil {
		fmt.Println(err)
	}
	// Output: c = 15
}

func ExampleRunInvalid() {
	vm := New()
	err := vm.Run(Bytecode{0})
	fmt.Println(err.Error())
	// Output: invalid bytecode
}

func ExampleInterpret() {
	vm := New()
	err := vm.Interpret(code)
	if err != nil {
		fmt.Println(err)
	}
	// Output: c = 15
}
